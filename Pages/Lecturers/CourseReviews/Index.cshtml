@page
@model CanvasLMS.Pages.Lecturers.CourseReviews.IndexModel
@{
    ViewData["Title"] = "Course Reviews";
}

@section Styles {
    <link rel="stylesheet" href="~/css/course-reviews.css" />
}

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="m-0">Course Reviews</h2>
        <div class="d-flex gap-2">
            <select class="form-select" asp-for="FilterRating" onchange="this.form.submit()">
                <option value="">All Ratings</option>
                <option value="5">5★ Only</option>
                <option value="4">4★ & Up</option>
                <option value="3">3★ & Up</option>
            </select>
            <select class="form-select" asp-for="SortBy" onchange="this.form.submit()">
                <option value="rating_high">Highest Rating</option>
                <option value="rating_low">Lowest Rating</option>
                <option value="count_high">Most Reviews</option>
                <option value="count_low">Least Reviews</option>
            </select>
        </div>
    </div>

    @if (!Model.CourseStats.Any())
    {
        <div class="alert alert-info">
            No course reviews found.
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4">
            @foreach (var stat in Model.CourseStats)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title">@stat.Course.Name</h5>
                            <div class="d-flex align-items-center gap-2 mb-3">
                                <div class="stars" style="color: #ffd700">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        @if (i <= Math.Floor(stat.AverageRating))
                                        {
                                            <i class="fas fa-star"></i>
                                        }
                                        else if (i - stat.AverageRating < 1 && i - stat.AverageRating > 0)
                                        {
                                            <i class="fas fa-star-half-alt"></i>
                                        }
                                        else
                                        {
                                            <i class="far fa-star"></i>
                                        }
                                    }
                                </div>
                                <span class="text-muted">
                                    @stat.AverageRating.ToString("F1") (@stat.ReviewCount @(stat.ReviewCount == 1 ? "review" : "reviews"))
                                </span>
                            </div>

                            @if (stat.Reviews.Any())
                            {
                                <div class="reviews-container collapsed" data-review-count="@stat.Reviews.Count()">
                                    @foreach (var review in stat.Reviews.OrderByDescending(r => r.CreatedAt))
                                    {
                                        <div class="review-item border-top py-3">
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <div class="stars" style="color: #ffd700">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        <i class="@(i <= review.Rating ? "fas" : "far") fa-star"></i>
                                                    }
                                                </div>
                                                <small class="text-muted">
                                                    @review.CreatedAt.ToString("MMM dd, yyyy")
                                                </small>
                                            </div>
                                            @if (!string.IsNullOrEmpty(review.Comment))
                                            {
                                                <p class="mb-0 text-secondary">@review.Comment</p>
                                            }
                                        </div>
                                    }
                                </div>
                                <button type="button" class="expand-button" onclick="toggleReviews(this)">
                                    Show More
                                </button>
                            }
                            else
                            {
                                <p class="text-muted mb-0">No reviews yet.</p>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script>
        // Auto-submit form when filters change
        document.querySelectorAll('select[onchange]').forEach(select => {
            select.form = document.createElement('form');
            select.form.method = 'get';
        });

        // Initialize expandable reviews containers
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.reviews-container').forEach(container => {
                const reviewCount = parseInt(container.dataset.reviewCount);
                if (reviewCount > 3) {
                    container.classList.add('expandable');
                }
            });
        });

        function toggleReviews(button) {
            const container = button.previousElementSibling;
            container.classList.toggle('collapsed');
            button.textContent = container.classList.contains('collapsed') ? 'Show More' : 'Show Less';
        }
    </script>
}
